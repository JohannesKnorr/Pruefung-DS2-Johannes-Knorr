[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Pruefung DS2 Johannes Knorr",
    "section": "",
    "text": "In diesem Post geht es darum, wie gut mithilfe von Textanalyse die Sentimentvariable (X2) anhand den zugehörigen Daten vorherzusagen ist.\n\n\nZuerst werden die für die Textanalyse wichtigesten Pakete geladen.\n\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.0.5\n\n\n-- Attaching packages --------------------------------------- tidyverse 1.3.1 --\n\n\nv ggplot2 3.4.0     v purrr   0.3.4\nv tibble  3.1.8     v dplyr   1.0.8\nv tidyr   1.2.0     v stringr 1.4.0\nv readr   2.1.2     v forcats 0.5.1\n\n\nWarning: package 'tidyr' was built under R version 4.0.5\n\n\nWarning: package 'readr' was built under R version 4.0.5\n\n\nWarning: package 'dplyr' was built under R version 4.0.5\n\n\n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\n\nlibrary(tidytext)\nlibrary(tokenizers)\nlibrary(easystats)\n\n# Attaching packages: easystats 0.6.0 (red = needs update)\n√ bayestestR  0.13.0   √ correlation 0.8.3 \n√ datawizard  0.6.5    x effectsize  0.8.2 \nx insight     0.18.8   √ modelbased  0.8.6 \n√ performance 0.10.2   x parameters  0.20.1\nx report      0.5.5    √ see         0.7.4 \n\nRestart the R-Session and update packages in red with `easystats::easystats_update()`.\n\nlibrary(naivebayes)\n\nWarning: package 'naivebayes' was built under R version 4.0.5\n\n\nnaivebayes 0.9.7 loaded\n\nlibrary(textrecipes)\n\nLoading required package: recipes\n\n\n\nAttaching package: 'recipes'\n\n\nThe following object is masked from 'package:stringr':\n\n    fixed\n\n\nThe following object is masked from 'package:stats':\n\n    step\n\nlibrary(tidymodels)\n\nWarning: package 'tidymodels' was built under R version 4.0.5\n\n\n-- Attaching packages -------------------------------------- tidymodels 0.2.0 --\n\n\nv broom        1.0.3     v rsample      1.1.1\nv dials        1.1.0     v tune         0.2.0\nv infer        1.0.4     v workflows    1.1.2\nv modeldata    1.1.0     v workflowsets 0.2.1\nv parsnip      1.0.3     v yardstick    0.0.9\n\n\nWarning: package 'tune' was built under R version 4.0.5\n\n\nWarning: package 'workflowsets' was built under R version 4.0.5\n\n\nWarning: package 'yardstick' was built under R version 4.0.5\n\n\n-- Conflicts ----------------------------------------- tidymodels_conflicts() --\nx scales::discard()        masks purrr::discard()\nx dplyr::filter()          masks stats::filter()\nx recipes::fixed()         masks stringr::fixed()\nx yardstick::get_weights() masks insight::get_weights()\nx dplyr::lag()             masks stats::lag()\nx yardstick::mae()         masks performance::mae()\nx parsnip::null_model()    masks insight::null_model()\nx infer::p_value()         masks parameters::p_value()\nx tune::parameters()       masks dials::parameters(), parameters::parameters()\nx yardstick::rmse()        masks performance::rmse()\nx dials::smoothness()      masks datawizard::smoothness()\nx yardstick::spec()        masks readr::spec()\nx recipes::step()          masks stats::step()\n* Use tidymodels_prefer() to resolve common conflicts.\n\nlibrary(lsa)\n\nLoading required package: SnowballC\n\nlibrary(discrim)\n\n\nAttaching package: 'discrim'\n\n\nThe following object is masked from 'package:dials':\n\n    smoothness\n\n\nThe following object is masked from 'package:datawizard':\n\n    smoothness\n\nlibrary(parsnip)\nlibrary(glmnet)\n\nLoading required package: Matrix\n\n\n\nAttaching package: 'Matrix'\n\n\nThe following objects are masked from 'package:tidyr':\n\n    expand, pack, unpack\n\n\nLoaded glmnet 4.1-6\n\nlibrary(fastrtext)\n\n\nAttaching package: 'fastrtext'\n\n\nThe following object is masked from 'package:insight':\n\n    get_parameters\n\n\n\n\n\nDer Datensatz wurde lokal importiert, kann aber auch online heruntergeladen werden:\n\nQuelle: Wiegand, Michael. 2019b. “GermEval-2018 Corpus (DE).” heiDATA. https://doi.org/10.11588/DATA/0B5VML. ———. 2019a. “GermEval-2018 Corpus (DE).” heiDATA. https://doi.org/10.11588/DATA/0B5VML. ———. 2019c. “GermEval-2018-Data-Master.” In GermEval-2018 Corpus (DE). heiDATA. https://doi.org/10.11588/data/0B5VML/XIUWJ7.\n\n\nd_pfad <- \"C:/R Data Science/DS2/Text Mining/Übung/Übung Datensatz Uni Heidelberg/GermEval-2018-Data-master/germeval2018.training.txt\"\n\n\ndataset <- read_tsv(d_pfad, col_names = FALSE)\n\nRows: 5009 Columns: 3\n-- Column specification --------------------------------------------------------\nDelimiter: \"\\t\"\nchr (3): X1, X2, X3\n\ni Use `spec()` to retrieve the full column specification for this data.\ni Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nIch fange damit an, dem Datensatz eine ID-Variable zu geben und anschließend typische Befehle auszuführen, die mir dabei helfen, vertrauter mit dem Datensatz zu werden.\nID Variable für den Datensatz:\n\ndataset <- dataset %>% mutate(id = as.character(1:nrow(.)))\n\n\ndataset %>% nrow()\n\n[1] 5009\n\n\n\ndataset %>% head()\n\n# A tibble: 6 x 4\n  X1                                                           X2    X3    id   \n  <chr>                                                        <chr> <chr> <chr>\n1 @corinnamilborn Liebe Corinna, wir würden dich gerne als Mo~ OTHER OTHER 1    \n2 @Martin28a Sie haben ja auch Recht. Unser Tweet war etwas m~ OTHER OTHER 2    \n3 @ahrens_theo fröhlicher gruß aus der schönsten stadt der we~ OTHER OTHER 3    \n4 @dushanwegner Amis hätten alles und jeden gewählt...nur Hil~ OTHER OTHER 4    \n5 @spdde kein verläßlicher Verhandlungspartner. Nachkarteln n~ OFFE~ INSU~ 5    \n6 @Dirki_M Ja, aber wo widersprechen die Zahlen denn denen, d~ OTHER OTHER 6    \n\n\nX1 ist der Textinhalt und bei X2 und X3 handelt es sich um die Klassifikation bzw. Sentimentauswertung des jeweiligen Textinhaltes.\nWelche Variablen hat X2 & X3?\nX2:\n\ndataset %>% count(X2)\n\n# A tibble: 2 x 2\n  X2          n\n  <chr>   <int>\n1 OFFENSE  1688\n2 OTHER    3321\n\n\nX3:\n\ndataset %>% count(X3)\n\n# A tibble: 4 x 2\n  X3            n\n  <chr>     <int>\n1 ABUSE      1022\n2 INSULT      595\n3 OTHER      3321\n4 PROFANITY    71\n\n\nKann es sein dass, wenn es sich um “Offense” handelt ist X3 wohl immer “Abuse”, “Insult” oder “Profanity”?\nGegenprobe:\n\ndataset %>% filter(X2 == \"OFFENSE\", X3 == \"OTHER\") %>% nrow() / nrow(dataset)\n\n[1] 0\n\n\n\ndataset %>%  filter(X2 == \"OTHER\", X3 == \"OTHER\") %>% nrow() / nrow(dataset)\n\n[1] 0.6630066\n\n\nDie Texte wurden also mit ca. 66% mit Other Klassifiziert und müssten dann zu 33% mit offense Klassifiziert werden.\n\ndataset %>%  filter(X2 == \"OFFENSE\") %>% nrow() / nrow(dataset)\n\n[1] 0.3369934"
  },
  {
    "objectID": "index.html#modelle",
    "href": "index.html#modelle",
    "title": "Pruefung DS2 Johannes Knorr",
    "section": "Modelle",
    "text": "Modelle\nBei dieser Textanalyse möchte ich mich auf 2 bestimmte Modelle beschränken und zwar auf ein Bayesmodell und ein Lasso Modell. Baummodelle eignen sich für das Text Mining nicht so gut und man stößt schnell auf Probleme. (siehe Kapitel 6.3 - Hvitfeldt, Emil, and Julia Silge. 2022. Supervised Machine Learning for Text Analysis in r. 1st ed. Boca Raton: Chapman; Hall/CRC. https://doi.org/10.1201/9781003093459.).\n\nBayesmodell:\n\nnaiv_bay <- naive_Bayes() %>% \n  set_mode(\"classification\") %>% \n  set_engine(\"naivebayes\")\n\n\nnaiv_bay\n\nNaive Bayes Model Specification (classification)\n\nComputational engine: naivebayes \n\n\n\n\nLassomodell:\n\nlasso_mod <- logistic_reg(penalty = tune(), mixture = 1) %>% \n  set_mode(\"classification\") %>% \n  set_engine(\"glmnet\")\n\n\nlasso_mod\n\nLogistic Regression Model Specification (classification)\n\nMain Arguments:\n  penalty = tune()\n  mixture = 1\n\nComputational engine: glmnet \n\n\n\n\nKreuzvalidierung 10x:\nDie Kreuzvalidierung wird 10fach durchgeführt um den Modellen mehr Güte zu geben, indem sie auf jeden einzelnen “Fold” gefittet werden.\n\nset.seed(42)\nv_fold <- vfold_cv(data_train)"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "Since this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  }
]